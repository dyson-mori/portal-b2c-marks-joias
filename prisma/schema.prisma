// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("NEXT_DATABASE_URL")
  directUrl = env("NEXT_DIRECT_URL")
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELED
  RETURNED
}

// model User {
//   id String @id @default(uuid())

//   Order Order[]

//   @@map("user")
// }

model Product {
  id          Int @id @unique
  category_id Int // will be use like -> Code Number <-

  title          String
  description    String
  price          Int // review this
  search         String // facilitate search
  thumbnail      String
  total_quantity Int // product quantity
  files          String @default("[]")

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  categories Category @relation(fields: [category_id], references: [id])

  @@map("products")
}

model Header {
  id String @id @default(cuid())

  title  String
  param  String
  public Boolean

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("header")
}

model Category {
  id Int @id @unique

  title     String
  thumbnail String

  show_on_landing Boolean? @default(false)

  // sub     SubCategory[]
  product Product[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("categories")
}

model Order {
  id String @id @default(cuid())

  status             OrderStatus @default(PENDING)
  payment_method     String // ex: 'credit_card', 'boleto'
  payment_status     String // ex: 'approved', 'pending', 'rejected'
  external_reference String // usado no Mercado Pago. Ex: PAY-1716258356842-3F5KZP

  total_amount  Decimal // total order value
  shipping_sost Decimal // valor cobrado pelo frete
  discount      Decimal @default(0)

  pick_up_in_store Boolean? @default(false)

  address String? @default("{}")
  product String  @default("[]") // snapShot

  tracking_code      String? // código dos correios ou logística própria
  estimated_delivery DateTime? // previsão da entrega
  delivered_at       DateTime? // quando foi entregue

  notes String? // campo para observações logísticas

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("order")
}

model Address {
  id String @id @default(cuid())
  // user   User?   @relation(fields: [userId], references: [id])
  // userId String?

  zip_code     String
  number       String
  street       String
  neighborhood String
  city         String
  state        String
  complement   String?
}

model Banner {
  id String @id @default(cuid())

  url    String
  public Boolean @default(false)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("banner")
}
