// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("NEXT_DATABASE_URL")
  directUrl = env("NEXT_DIRECT_URL")
}

model Product {
  id          Int @id @unique
  category_id Int // will be use like -> Code Number <-

  stripe_product_id String
  stripe_price_id   String

  title       String
  description String
  price       Int // review this
  unit_amount Int // review this
  search      String // facilitate search
  thumbnail   String
  files       String @default("[]")
  quantity    Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  categories Category @relation(fields: [category_id], references: [id])

  @@map("products")
}

model Header {
  id String @id @default(cuid())

  title  String
  param  String
  public Boolean

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("header")
}

model Category {
  id Int @id @unique

  title     String
  thumbnail String

  show_on_landing Boolean? @default(false)

  // sub     SubCategory[]
  product Product[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("categories")
}

// model SubCategory {
//   id          String @id @default(cuid())
//   category_id String

//   title String @unique

//   category Category @relation(fields: [category_id], references: [id], onDelete: Cascade)

//   created_at DateTime @default(now())
//   updated_at DateTime @updatedAt

//   @@map("sub")
// }

model Gateway {
  code_id String @id @default(uuid())

  client_id String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("gateway")
}
